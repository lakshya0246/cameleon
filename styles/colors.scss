@use "sass:color";
@mixin define-color($name, $value) {
  @for $i from 1 through 4 {
    $lighterValue: color.scale($value, $lightness: (5 - $i) * 23%);
    --color-#{$name}-#{$i}00: #{$lighterValue};
  }
  --color-#{$name}-500: #{$value};
  @for $i from 1 through 4 {
    $darkerValue: color.scale(
      $value,
      $lightness: $i * -15%,
      $saturation: $i * 25%
    );
    --color-#{$name}-#{$i + 5}00: #{$darkerValue};
  }
}

:root {
  color-scheme: light dark; /* both supported */

  --color-gray-900: hsl(0, 0%, 0%);
  --color-gray-800: hsl(0, 0%, 10%);
  --color-gray-750: hsl(0, 0%, 15%);
  --color-gray-700: hsl(0, 0%, 20%);
  --color-gray-600: hsl(0, 0%, 30%);
  --color-gray-500: hsl(0, 0%, 40%);
  --color-gray-400: hsl(0, 0%, 50%);
  --color-gray-300: hsl(0, 0%, 60%);
  --color-gray-200: hsl(0, 0%, 70%);
  --color-gray-100: hsl(0, 0%, 80%);
  --color-gray-50: hsl(0, 0%, 90%);

  --white-100: hsla(0, 0%, 100%);
  --white-200: hsla(0, 0%, 100%, 0.9);
  --white-300: hsla(0, 0%, 100%, 0.8);
  --white-400: hsla(0, 0%, 100%, 0.7);
  --white-500: hsla(0, 0%, 100%, 0.6);
  --white-600: hsla(0, 0%, 100%, 0.5);
  --white-700: hsla(0, 0%, 100%, 0.4);
  --white-800: hsla(0, 0%, 100%, 0.3);
  --white-900: hsla(0, 0%, 100%, 0.2);

  @include define-color("primary", hsl(281, 61%, 46%));
}
